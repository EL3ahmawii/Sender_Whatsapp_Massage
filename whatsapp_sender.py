import time
import re
from collections import defaultdict

# Student data from the PDF (first 10 students for demonstration)
students = [
    # {"name": "محمد علاء محمد عبدالواحد السيد", "number": "1288834029"},
    # {"name": "محمد عماد حامد شحاته محمود", "number": "1201859715"},
    # {"name": "محمد عماد محي حسانين", "number": "1024771527"},
    # {"name": "محمد عماد مسعد عبدالكريم عبدالمعطي", "number": "1555221196"},
    # {"name": "محمد محمد الغندور ابراهيم الغندور", "number": "1225660089"},
    # {"name": "محمد محمود احمد حسانين", "number": "1016243570"},
    # {"name": "محمود السيد عبدالغفار سليمان علي", "number": "1025167544"},
    # {"name": "محمود صالح السيد عوض علي السقا", "number": "1092637120"},
    # {"name": "محمود علاء الدين محمد عبدالعزيز باز شطا", "number": "1207275680"},
    # {"name": "محمود محمد احمد احمد", "number": "1227060647"},
    # {"name": "محمود وائل محمود السيد رمضان الشناوى", "number": "1005030603"},
    # {"name": "مصطفي هاني مصطفي عبدالعزيز", "number": "1029617311"},
    # {"name": "يوسف الشىبراوى السيد الشىبراوى السيد", "number": "1207497728"},
    # {"name": "رياض جمال رياض السيد المرسي", "number": "1095047303"},
    # {"name": "طارق جمال حسن الامام ابراهيم", "number": "1003876972"},
    # {"name": "منار جمال جمعه السيد ابراهيم", "number": "1280477653"},
    # {"name": "ابراهيم هاني حامد محمود علي", "number": "1061298871"},
    # {"name": "احمد احمد محمود لطفي", "number": "1203824082"},
    # {"name": "احمد ايهاب احمد السعيد السيد", "number": "1028830063"},
    # {"name": "حمد عبد الفتاح السيد", "number": "1093003923"},
    # {"name": "احمد علاء عبدالله مصطفي", "number": "1222816705"},
    # {"name": "عبدالرحمن مسعود السيد عبدالغفار أحمد", "number": "1080433695"},
    # {"name": "محمد خالد محمد رمضان محمد العيسوى", "number": "1279023231"},
    # {"name": "محمد شعبان سعد الدين الغريب", "number": "1023014700"},
    # {"name": "محمد محمد عبد السلام محمد السيد", "number": "1060647477"},
    {"name": "شهد احمد محمد احمد محمد يوسف", "number": "1225304859"},
    {"name": "شهد محمد ياسين ابوالمعاطي", "number": "1021796284"},
    {"name": "ملك ابراهيم السيد ابراهيم جاد", "number": "1555675696"},
    {"name": "محمد فتوح السيد محمد اسماعيل", "number": "1025391417"},
    {"name": "ايمان شكرى حمدى محمد موسي", "number": "1288591041"},
    {"name": "حنان محمد المنشاوى المنشاوى عمر", "number": "1016703308"},
    {"name": "ساره السيد سمير سعد عطيه", "number": "1008790488"},
    {"name": "فاطمه رأفت سيف النصر محمد حجازى", "number": "1014508345"},
    {"name": "احمد محمد السيد حامد السعيد", "number": "1099245880"},
]

def validate_phone_number(number):
    """تحقق من صحة رقم الهاتف"""
    # إزالة أي مسافات أو أحرف غير رقمية
    cleaned_number = re.sub(r'\D', '', number)
    
    # التحقق من الطول (10 أرقام للهواتف المصرية)
    if len(cleaned_number) == 10:
        return cleaned_number
    elif len(cleaned_number) == 9:
        return "0" + cleaned_number  # إضافة صفر إذا ناقص
    else:
        return None

def send_whatsapp_message(number, message):
    """
    Send a WhatsApp message to a phone number
    """
    try:
        # التحقق من صحة الرقم
        validated_number = validate_phone_number(number)
        if not validated_number:
            print(f"رقم غير صحيح: {number}")
            return False
        
        # Import pywhatkit
        import pywhatkit
        
        # Format the number with country code (assuming Egypt +20)
        formatted_number = f"+20{validated_number}"
        print(f"جاري الإرسال إلى: {formatted_number}")
        
        # Send message immediately
        pywhatkit.sendwhatmsg_instantly(formatted_number, message, 10, True, 3)
        
        print(f"تم الإرسال إلى {formatted_number}")
        return True
        
    except Exception as e:
        print(f"فشل في الإرسال إلى {number}: {str(e)}")
        return False

def create_personalized_message(student_name):
    """
    Create a personalized message for each student
    """
    message = f"""
الطالب/ {student_name}
معاك بشمهندس عثمان من اداره جامعه المنصوره 

تم فتح باب الحجز بقبول طلاب الدبلومات بالالتحاق بالبرامج التاليه:
- المساحه تكتب في البطاقه ( مساحه)
- الحاسب الالي تكتب في البطاقه ( تكنولوجيا المعلومات)
- الذكاء الاصطناعي تكتب في البطاقه ( ملاحظه  هندسي)
- العماره و الديكور تكتب في البطاقه ( فنى عماره أو فنى ديكور)
- هندسه البرمجيات ( ملاحظ هندسي)
- اداره الاعمال و التسويق الالكتروني ( تكتب في البطاقه أداره اعمال)

و ذلك للتدريب بمركز التدريب الرقمى بجامعه المنصوره أو كليه الحاسبات و المعلومات.

تفاصيل التدريب:
- التدريب داخل جامعة المنصورة 
- كارنيه لدخول الجامعة طوال فترة التدريب 
- 5 شهادات معتمده من جامعه المنصوره و اعتماد نائب رئيس الجامعة و قابلين للتوثيق من وزارة الخارجية 
- من خلال الشهاده تقدر تغير مسمي وظيفي فى البطاقه بتاعتك بالإضافة إلى كارنيه مزاوله المهنه 

يوجد سنه مكثف تكلفتها 8000 جنيه فقط شامله الشهادات بيتم دفع 1500 مقدم و تقسيط باقي المبلغ على مدار 7 شهور.

و يوجد مستوين تكلفتها 7000 جنيه فقط شامله الشهادات بيتم دفع 1500 مقدم و تقسيط باقي المبلغ على مدار السنة التدريبيه.

للتقديم:
**الدخول من بوابة الجلاء بتعدى كلية تربية ثم كلية صيدلة ثم مبنى مركز التدريب الرقمى بجامعه المنصوره بتدخل المبني و بتسأل عن بشمهندسه مريم أو بشمهندسه منار شباك 7**

الأوراق المطلوبه:
- صوره البطاقه الشخصيه 
- صورتين شخصيتين لعمل كارنيه لدخول الجامعة
- 1500 مقدم
التقديم حتى نهايه شهر 9 قبل البدء بالدراسة 
او الاستفسار عن طريق الرقم 
  01063556264 
 أو الاستفسار داخل جامعة المنصورة بالمركز مع المهندسة منار
"""
    return message

def main():
    print("بدء إرسال رسائل الواتساب...")
    print(f"سيتم الإرسال إلى {len(students)} طالب")
    
    # إرسال رسائل مخصصة مع تأخير لتجنب الحظر
    for i, student in enumerate(students):
        print(f"جاري معالجة {i+1}/{len(students)}: {student['name']} - {student['number']}")
        
        # إنشاء رسالة مخصصة
        message = create_personalized_message(student['name'])
        
        # إرسال الرسالة
        success = send_whatsapp_message(student['number'], message)
        
        # إضافة تأخير بين الرسائل
        if success and i < len(students) - 1:
            print("انتظار 10 ثانية قبل الرسالة التالية...")
            time.sleep(10)
        elif not success:
            print("تخطي هذا الرقم والمتابعة إلى التالي...")
            time.sleep(10)  # انتظار أقصر في حالة الخطأ
    
    print("اكتمل إرسال الرسائل!")

if __name__ == "__main__":
    main()
    